/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { AyalaWhereUniqueInput } from "../../ayala/base/AyalaWhereUniqueInput";
import { Type } from "class-transformer";
import { GradeWhereUniqueInput } from "../../grade/base/GradeWhereUniqueInput";
import { OnevalWhereUniqueInput } from "../../oneval/base/OnevalWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class TestCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  aaaaaaaaaa?: string | null;

  @ApiProperty({
    required: false,
    type: () => AyalaWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AyalaWhereUniqueInput)
  @IsOptional()
  @Field(() => AyalaWhereUniqueInput, {
    nullable: true,
  })
  ayala?: AyalaWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => GradeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GradeWhereUniqueInput)
  @IsOptional()
  @Field(() => GradeWhereUniqueInput, {
    nullable: true,
  })
  grade?: GradeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OnevalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OnevalWhereUniqueInput)
  @IsOptional()
  @Field(() => OnevalWhereUniqueInput, {
    nullable: true,
  })
  oneval?: OnevalWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}
export { TestCreateInput };
